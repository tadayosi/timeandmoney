Release 0.3 begins to provide control over money calculations. The Ratio class,
Proration class, and some of the Money methods take arguments for the number
of decimal places of precision for intermediate calculations and the rounding
rule for the calculation. If we find an alpha user who has an immediate need
for carefully controlled money calculations, that will accellerate the development
of this module.

DateSpecification is introduced, in a preliminary form, allowing declaration of 
holidays and other recurring date rules.

Release 0.3 also provides a few simple usage examples (see example.insuranceRates.*),
the first of many.

Note: This version of this code is intended for use on projects who are interested
in helping the development of the library and are prepared to deal with the
immaturity of the code and design. Not only will defects in the code be fixed 
in later versions, there will be radical changes to the design, based on the
feedback of these early users. These design changes will not all be backward
compatible.

With that caveat, the library in its current state should provide value.
Some useful, and perhaps not obvious, features of the current library include:
- ComparableInterval (and its "concrete" subclass) which can be used for any
objects that have a natural ordering reflected by implementing the Comparable
interface. For example, Money implements Comparable, so
if you want to check Price ranges, make an interval for each Money range. Any
class of yours which implements Comparable can have logical intervals defined
this way.
Another class in the library that works with Interval is IntervalKeyedMap. This
allows applications to find objects with a key by looking up the key within
a series of Intervals.

Java Version Requirement: 1.4
-----------------------------
Currency:  The money package depends on the java.util.Currency class. This dependency
could be eliminated by adding a Currency class to the library. For now, it seems
simpler to use what the Sun provided.

assert: Many methods state preconditions using Java assert statement, which is ignored,
by default, in 1.4, but will not compile in earlier Java versions. This can be made 
backward compatible by commenting out the assert statements.
